version: '3.8'

services:
  # PostgreSQL database with pgvector extension
  postgres:
    image: pgvector/pgvector:pg15
    container_name: staycrest-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: staycrest
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching and session storage
  redis:
    image: redis:7-alpine
    container_name: staycrest-redis-dev
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PgAdmin
  pgadmin:
    image: dpage/pgadmin4
    container_name: staycrest-pgadmin-dev
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@staycrest.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

  # StayCrest application with hot-reloading
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: staycrest-app-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
      - "9229:9229" # For Node.js debugging
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/staycrest
      REDIS_URL: redis://redis:6379
      SESSION_SECRET: staycrest-dev-secret-key
      JWT_SECRET: staycrest-dev-jwt-secret
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_MODEL: gpt-3.5-turbo
      # Enable source maps for debugging
      NODE_OPTIONS: --enable-source-maps
    volumes:
      - ./:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  # Ollama for development
  ollama:
    image: ollama/ollama:latest
    container_name: staycrest-ollama-dev
    restart: unless-stopped
    ports:
      - "11434:11434"
    volumes:
      - ollama_models:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_ORIGINS=http://localhost:3000
    deploy:
      resources:
        limits:
          memory: 8G
          cpus: '2'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Voice Service for development
  voice-service:
    image: ghcr.io/coqui-ai/tts:latest
    container_name: staycrest-voice-service-dev
    restart: unless-stopped
    ports:
      - "5002:5002"
      - "9000:9000"
    volumes:
      - voice_models:/models/voice
    environment:
      - OLIVIA_OLLAMA_HOST=ollama:11434
      - OLIVIA_CACHE_DIR=/models/voice
      - OLIVIA_USE_GPU=false
      - WHISPER_MODEL_SIZE=base
      - TTS_MODEL=tts_models/en/ljspeech/tacotron2-DDC
      - DEBUG=true
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2'
    depends_on:
      - ollama

  # Voice Adapter Service for development
  voice-adapter:
    build:
      context: .
      dockerfile: Dockerfile.voice-adapter
      target: development
    container_name: staycrest-voice-adapter-dev
    restart: unless-stopped
    ports:
      - "3200:3200"
      - "9229:9229" # For debugging
    environment:
      - NODE_ENV=development
      - VOICE_SERVICE_URL=http://voice-service:5002
      - WHISPER_SERVICE_URL=http://voice-service:9000
      - OLLAMA_URL=http://ollama:11434
      - ENABLE_STREAMING=true
      - LOG_LEVEL=debug
      - ENABLE_WEBSOCKET=true
    volumes:
      - ./voice-adapter:/app
      - /app/node_modules
    command: npm run dev
    depends_on:
      - voice-service
      - ollama

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
  ollama_models:
  voice_models: 