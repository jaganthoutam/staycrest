# Use a more comprehensive base image for development
FROM node:18-bullseye

# Set working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    gnupg \
    git \
    ffmpeg \
    sox \
    python3 \
    python3-pip \
    chromium \
    libglib2.0-0 \
    libnss3 \
    libnspr4 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdrm2 \
    libdbus-1-3 \
    libexpat1 \
    libxcb1 \
    libxkbcommon0 \
    libx11-6 \
    libxcomposite1 \
    libxdamage1 \
    libxext6 \
    libxfixes3 \
    libxrandr2 \
    libgbm1 \
    libpango-1.0-0 \
    libcairo2 \
    libasound2 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies for voice processing
RUN pip3 install --no-cache-dir \
    torch \
    torchaudio \
    numpy \
    soundfile \
    librosa

# Set environment variables
ENV NODE_ENV=development \
    DEBUG=true \
    PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
    PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium \
    ENABLE_VOICE_SERVICES=true \
    DEFAULT_STT_MODEL=whisper-base \
    DEFAULT_TTS_MODEL=tacotron2-ddc \
    DEFAULT_VOICE=female-1 \
    VOICE_STREAMING=true \
    WHISPER_MODEL_SIZE=base \
    CACHE_STRATEGY=layered \
    DB_CACHE_METRICS=true \
    NODE_OPTIONS=--enable-source-maps

# Create necessary directories
RUN mkdir -p \
    /app/logs \
    /app/data \
    /app/models/voice \
    /app/models/llm \
    /app/cache \
    /app/uploads \
    && chmod -R 777 \
        /app/logs \
        /app/data \
        /app/models \
        /app/cache \
        /app/uploads

# Install development tools
RUN npm install -g \
    nodemon \
    typescript \
    ts-node \
    @types/node

# Add volume mount points
VOLUME ["/app/data", "/app/logs", "/app/models", "/app/cache", "/app/uploads"]

# Expose ports
EXPOSE 3000 9229

# Start development server with hot reloading and debugging
CMD ["npm", "run", "dev"] 