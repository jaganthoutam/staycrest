apiVersion: apps/v1
kind: Deployment
metadata:
  name: staycrest
  labels:
    app: staycrest
spec:
  replicas: 3
  selector:
    matchLabels:
      app: staycrest
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: staycrest
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: staycrest
        image: staycrest:latest
        imagePullPolicy: Always
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        ports:
        - containerPort: 3000
          name: http
        - containerPort: 9091
          name: metrics
        resources:
          limits:
            cpu: "1.5"
            memory: "2Gi"
          requests:
            cpu: "500m"
            memory: "1Gi"
        env:
        - name: NODE_ENV
          value: "production"
        - name: REDIS_URI
          value: "redis://redis-service:6379"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: staycrest-secrets
              key: mongodb-uri
        - name: POSTGRES_URI
          valueFrom:
            secretKeyRef:
              name: staycrest-secrets
              key: postgres-uri
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: staycrest-secrets
              key: openai-api-key
        - name: SESSION_SECRET
          valueFrom:
            secretKeyRef:
              name: staycrest-secrets
              key: session-secret
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: staycrest-secrets
              key: jwt-secret
        - name: WORKER_THREADS
          value: "4"
        - name: LOG_LEVEL
          value: "info"
        - name: ENABLE_METRICS
          value: "true"
        # Search Sources Configuration
        - name: ENABLE_LOYALTY_PROGRAMS
          valueFrom:
            configMapKeyRef:
              name: staycrest-config
              key: ENABLE_LOYALTY_PROGRAMS
        - name: ENABLE_WEB_SEARCH
          valueFrom:
            configMapKeyRef:
              name: staycrest-config
              key: ENABLE_WEB_SEARCH
        - name: ENABLE_HOTEL_AGGREGATORS
          valueFrom:
            configMapKeyRef:
              name: staycrest-config
              key: ENABLE_HOTEL_AGGREGATORS
        - name: ENABLE_DIRECT_BOOKING
          valueFrom:
            configMapKeyRef:
              name: staycrest-config
              key: ENABLE_DIRECT_BOOKING
        - name: LOYALTY_PROGRAMS_CONFIG
          valueFrom:
            configMapKeyRef:
              name: staycrest-config
              key: LOYALTY_PROGRAMS_CONFIG
        - name: SEARCH_SOURCES_CACHE_TTL
          valueFrom:
            configMapKeyRef:
              name: staycrest-config
              key: SEARCH_SOURCES_CACHE_TTL
        # Database Cache Configuration
        - name: ENABLE_REDIS_CACHE
          valueFrom:
            configMapKeyRef:
              name: staycrest-config
              key: ENABLE_REDIS_CACHE
        - name: ENABLE_MONGODB_CACHE
          valueFrom:
            configMapKeyRef:
              name: staycrest-config
              key: ENABLE_MONGODB_CACHE
        - name: ENABLE_POSTGRES_PGBOUNCER
          valueFrom:
            configMapKeyRef:
              name: staycrest-config
              key: ENABLE_POSTGRES_PGBOUNCER
        - name: ENABLE_POSTGRES_QUERY_CACHE
          valueFrom:
            configMapKeyRef:
              name: staycrest-config
              key: ENABLE_POSTGRES_QUERY_CACHE
        - name: CACHE_STRATEGY
          valueFrom:
            configMapKeyRef:
              name: staycrest-config
              key: CACHE_STRATEGY
        - name: DB_CACHE_METRICS
          valueFrom:
            configMapKeyRef:
              name: staycrest-config
              key: DB_CACHE_METRICS
        - name: REDIS_MAX_MEMORY
          valueFrom:
            configMapKeyRef:
              name: staycrest-config
              key: REDIS_MAX_MEMORY
              optional: true
        - name: MONGODB_QUERY_CACHE_SIZE
          valueFrom:
            configMapKeyRef:
              name: staycrest-config
              key: MONGODB_QUERY_CACHE_SIZE
              optional: true
        - name: PGBOUNCER_MAX_CONNECTIONS
          valueFrom:
            configMapKeyRef:
              name: staycrest-config
              key: PGBOUNCER_MAX_CONNECTIONS
              optional: true
        - name: DB_CACHE_CONFIG_PATH
          value: "/app/config/db-cache/db-cache.js"
        livenessProbe:
          httpGet:
            path: /api/health/liveness
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /api/health/readiness
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /api/health/startup
            port: http
          periodSeconds: 5
          failureThreshold: 12
        lifecycle:
          postStart:
            exec:
              command: ["/bin/sh", "-c", "curl -s http://localhost:3000/api/health/search-sources || exit 1 && curl -s http://localhost:3000/api/health/db-cache || exit 1"]
        volumeMounts:
        - name: logs
          mountPath: /app/logs
        - name: tmp
          mountPath: /tmp
        - name: search-sources-config
          mountPath: /app/config/search-sources
          readOnly: true
        - name: db-cache-config
          mountPath: /app/config/db-cache
          readOnly: true
      volumes:
      - name: logs
        persistentVolumeClaim:
          claimName: app-logs-pvc
      - name: tmp
        emptyDir: {}
      - name: search-sources-config
        configMap:
          name: search-sources-config
      - name: db-cache-config
        configMap:
          name: db-cache-config
---
apiVersion: v1
kind: Service
metadata:
  name: staycrest-service
  labels:
    app: staycrest
spec:
  selector:
    app: staycrest
  ports:
  - port: 80
    targetPort: 3000
    name: http
  - port: 9091
    targetPort: 9091
    name: metrics
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: staycrest-ingress
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
  - hosts:
    - staycrest.example.com
    - api.staycrest.example.com
    secretName: staycrest-tls-secret
  rules:
  - host: staycrest.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: staycrest-service
            port:
              name: http
  - host: api.staycrest.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: staycrest-service
            port:
              name: http
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: staycrest-config
data:
  NODE_ENV: "production"
  LOG_LEVEL: "info"
  WORKER_THREADS: "4"
  ENABLE_METRICS: "true"
  CONNECTION_POOL_SIZE: "20"
  API_RATE_LIMIT: "100"
  CACHE_TTL: "3600"
  # Search Sources Configuration
  ENABLE_LOYALTY_PROGRAMS: "true"
  ENABLE_WEB_SEARCH: "true"
  ENABLE_HOTEL_AGGREGATORS: "true"
  ENABLE_DIRECT_BOOKING: "true"
  LOYALTY_PROGRAMS_CONFIG: "/app/config/search-sources.js"
  SEARCH_SOURCES_CACHE_TTL: "7200"
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: staycrest-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: staycrest
  minReplicas: 3
  maxReplicas: 15
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 30
        periodSeconds: 60
    scaleUp:
      stabilizationWindowSeconds: 0
      policies:
      - type: Percent
        value: 100
        periodSeconds: 60
      - type: Pods
        value: 5
        periodSeconds: 60
      selectPolicy: Max
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: staycrest-pdb
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: staycrest 