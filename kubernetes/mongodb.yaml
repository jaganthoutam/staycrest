apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mongodb
  labels:
    app: mongodb
spec:
  serviceName: mongodb-service
  replicas: 3
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      securityContext:
        fsGroup: 1001
      terminationGracePeriodSeconds: 120
      containers:
      - name: mongodb
        image: mongo:6
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        command:
        - mongod
        - --bind_ip_all
        - --replSet
        - rs0
        - --dbpath
        - /data/db
        - --auth
        ports:
        - name: mongodb
          containerPort: 27017
        resources:
          limits:
            cpu: "2"
            memory: "4Gi"
          requests:
            cpu: "500m"
            memory: "1Gi"
        livenessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        readinessProbe:
          exec:
            command:
            - mongo
            - --eval
            - "db.adminCommand('ping')"
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 6
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        - name: mongodb-config
          mountPath: /config
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: root-password
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: mongodb-data-pvc
      - name: mongodb-config
        configMap:
          name: mongodb-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-config
data:
  init-replica-set.js: |
    // Initialize replica set
    rs.initiate({
      _id: "rs0",
      members: [
        { _id: 0, host: "mongodb-0.mongodb-service:27017" },
        { _id: 1, host: "mongodb-1.mongodb-service:27017" },
        { _id: 2, host: "mongodb-2.mongodb-service:27017" }
      ]
    });
  setup-user.js: |
    // Create application user for staycrest database
    db = db.getSiblingDB('staycrest');
    db.createUser({
      user: process.env.MONGODB_APP_USERNAME,
      pwd: process.env.MONGODB_APP_PASSWORD,
      roles: [
        { role: 'readWrite', db: 'staycrest' }
      ]
    });
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
  labels:
    app: mongodb
spec:
  clusterIP: None
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017
---
apiVersion: v1
kind: Secret
metadata:
  name: mongodb-secret
type: Opaque
stringData:
  root-username: admin
  root-password: StrongRootPassword123
  app-username: staycrest
  app-password: StrongAppPassword456
  connection-string: mongodb://staycrest:StrongAppPassword456@mongodb-0.mongodb-service:27017,mongodb-1.mongodb-service:27017,mongodb-2.mongodb-service:27017/staycrest?replicaSet=rs0
---
apiVersion: batch/v1
kind: Job
metadata:
  name: mongodb-init-replica
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: mongodb-init
        image: mongo:6
        command:
        - "/bin/bash"
        - "-c"
        - |
          sleep 60
          mongo mongodb://mongodb-0.mongodb-service:27017 --file /config/init-replica-set.js
          sleep 30
          mongo mongodb://mongodb-0.mongodb-service:27017 -u $MONGO_INITDB_ROOT_USERNAME -p $MONGO_INITDB_ROOT_PASSWORD --authenticationDatabase admin --file /config/setup-user.js
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: root-username
        - name: MONGO_INITDB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: root-password
        - name: MONGODB_APP_USERNAME
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: app-username
        - name: MONGODB_APP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mongodb-secret
              key: app-password
        volumeMounts:
        - name: mongodb-config
          mountPath: /config
      volumes:
      - name: mongodb-config
        configMap:
          name: mongodb-config 